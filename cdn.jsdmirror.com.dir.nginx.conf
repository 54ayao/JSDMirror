#PROXY-START/

location ~* ^/(npm|gh|wp|china|combine)/([^/]+/?)+ 
{
   # 设置代理缓冲区大小
   proxy_buffer_size 128k;
   proxy_buffers 64 128k;
   proxy_busy_buffers_size 2048k;

   # 启用 TCP nodelay 选项
   tcp_nodelay on;

   # 设置 FastCGI 超时时间
   fastcgi_connect_timeout 600;
   fastcgi_send_timeout 600;
   fastcgi_read_timeout 600;

   # 设置 FastCGI 缓冲区大小
   fastcgi_buffer_size 512k;
   fastcgi_buffers 64 512k;
   fastcgi_busy_buffers_size 2048k;
   fastcgi_temp_file_write_size 2048k;

   # 代理到目标服务器
   proxy_pass https://fastly.jsdelivr.net;

   # 设置代理请求头
   proxy_set_header Host fastly.jsdelivr.net;
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header REMOTE-HOST $remote_addr;
   proxy_set_header Upgrade $http_upgrade;
   proxy_set_header Connection $connection_upgrade;
   proxy_http_version 1.1;

   # 设置 SSL 名称和服务器名称指示
   proxy_ssl_name fastly.jsdelivr.net;
   proxy_ssl_server_name on;

   # 忽略 Accept-Encoding 头
   proxy_set_header Accept-Encoding "";

   # 替换响应内容中的文本
   sub_filter "Learn more about jsDelivr" " Learn more about JSDMirror";
   sub_filter "<text .*?>jsDelivr</text>" "<text jsDelivr>JSDMirror</text>";
   sub_filter "<text x=\"265\" y=\"140\" transform=\"scale(.1)\" fill=\"#fff\" textLength=\"410\">jsDelivr</text>" "<text x=\"265\" y=\"140\" transform=\"scale(.1)\" fill=\"#fff\" textLength=\"410\">JSDMirror</text>";
   sub_filter '<a href="https://github.com/jsdelivr/jsdelivr">' '<a href="https://beian.miit.gov.cn">辽ICP备2023005487号-9 <a href="http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=21028102000208">辽公网安备21028102000208号</a>&nbsp; &nbsp;<a href="https://github.com/54ayao/jsdmirror">&nbsp;';
   sub_filter "Documentation" "GitHub主页</a>&nbsp&nbsp&nbsp";
   sub_filter " Learn more about JSDMirror" "关于JSDMirror";
   sub_filter "jsDelivr" "JSDmirror";
   sub_filter "data.jsdelivr.com" "data.jsdmirror.com";
   sub_filter "www.jsdelivr.com" "www.jsdmirror.com";
   sub_filter "cdn.jsdelivr.net" "cdn.jsdmirror.com";

   # 关闭 sub_filter_once，以便所有匹配的文本都会被替换
   sub_filter_once off;

   # 添加自定义响应头
   add_header X-Cache $upstream_cache_status;

   # 忽略某些响应头
   proxy_ignore_headers Set-Cookie Cache-Control expires;

   # 设置缓存
   proxy_cache cache_one;
   proxy_cache_key $host$uri$is_args$args;
   proxy_cache_valid 200 304 301 302 120m;
}

#PROXY-END/
